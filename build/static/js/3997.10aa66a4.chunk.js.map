{"version":3,"file":"static/js/3997.10aa66a4.chunk.js","mappings":"gNACaA,EAAY,WACrB,SAAAA,EAAYC,IAAWC,EAAAA,EAAAA,GAAA,KAAAF,GACnBG,KAAKF,UAAYA,CACrB,CAmBC,OAnBAG,EAAAA,EAAAA,GAAAJ,EAAA,EAAAK,IAAA,OAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,EAAWC,GAAQ,IAAAC,EAAA,OAAAJ,EAAAA,EAAAA,KAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAId,OAHKJ,GAAWK,EAAAA,EAAAA,IAAgBN,EAASO,QAAQC,MAAOR,EAASS,GAAIT,EAASO,QAAQG,qBAEnFV,EAASQ,OAAQG,EAAAA,EAAAA,IAAuBV,EAAUD,EAASO,QAAQC,MAAMI,UAAWrB,KAAKF,UAAUwB,OAAOC,eAC7GX,EAAAE,KAAA,EACKU,QAAQC,UAAS,wBAAAb,EAAAc,OAAA,GAAAlB,EAAA,UAC1B,gBAAAmB,GAAA,OAAAvB,EAAAwB,MAAA,KAAAC,UAAA,EAPA,IAOA,CAAA3B,IAAA,YAAAC,MACD,SAAUM,GACN,IAAAqB,EAAwDrB,EAASO,QAAQC,MAAMI,UAApEU,EAAUD,EAAbE,EAAkBC,EAAUH,EAAbI,EAAkBC,EAAUL,EAAbM,EAAsDnB,EAAUR,EAAVQ,MAC5F,OAASR,EAAS4B,YACb5B,EAAS6B,gBACWC,KAAd,OAALtB,QAAK,IAALA,OAAK,EAALA,EAAOe,EAAE7B,QAAuB4B,EAAWS,aACrBD,KAAd,OAALtB,QAAK,IAALA,OAAK,EAALA,EAAOiB,EAAE/B,QAAuB8B,EAAWO,aACxBD,KAAd,OAALtB,QAAK,IAALA,OAAK,EAALA,EAAOmB,EAAEjC,QAAuBgC,EAAWK,OACxD,GAAC,CAAAtC,IAAA,SAAAC,MAAA,eAAAsC,GAAApC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAmC,EAAajC,EAAUkC,GAAK,OAAArC,EAAAA,EAAAA,KAAAK,MAAA,SAAAiC,GAAA,cAAAA,EAAA/B,KAAA+B,EAAA9B,MAAA,OACW,OAAnC+B,EAAAA,EAAAA,IAAYpC,EAASQ,MAAO0B,GAAOC,EAAA9B,KAAA,EAC7BU,QAAQC,UAAS,wBAAAmB,EAAAlB,OAAA,GAAAgB,EAAA,KAC1B,gBAAAI,EAAAC,GAAA,OAAAN,EAAAb,MAAA,KAAAC,UAAA,EAJA,MAIAhC,CAAA,CAtBoB,E","sources":["../node_modules/@tsparticles/updater-color/browser/ColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nexport class ColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    async init(particle) {\n        const hslColor = rangeColorToHsl(particle.options.color, particle.id, particle.options.reduceDuplicates);\n        if (hslColor) {\n            particle.color = getHslAnimationFromHsl(hslColor, particle.options.color.animation, this.container.retina.reduceFactor);\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        const { h: hAnimation, s: sAnimation, l: lAnimation } = particle.options.color.animation, { color } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            ((color?.h.value !== undefined && hAnimation.enable) ||\n                (color?.s.value !== undefined && sAnimation.enable) ||\n                (color?.l.value !== undefined && lAnimation.enable)));\n    }\n    async update(particle, delta) {\n        updateColor(particle.color, delta);\n        await Promise.resolve();\n    }\n}\n"],"names":["ColorUpdater","container","_classCallCheck","this","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","particle","hslColor","wrap","_context","prev","next","rangeColorToHsl","options","color","id","reduceDuplicates","getHslAnimationFromHsl","animation","retina","reduceFactor","Promise","resolve","stop","_x","apply","arguments","_particle$options$col","hAnimation","h","sAnimation","s","lAnimation","l","destroyed","spawning","undefined","enable","_update","_callee2","delta","_context2","updateColor","_x2","_x3"],"sourceRoot":""}