{"version":3,"file":"static/js/9887.6c03c3e8.chunk.js","mappings":"sNAEaA,EAAkB,WAC3B,SAAAA,EAAYC,IAAWC,EAAAA,EAAAA,GAAA,KAAAF,GACnBG,KAAKF,UAAYA,CACrB,CA4BC,OA5BAG,EAAAA,EAAAA,GAAAJ,EAAA,EAAAK,IAAA,OAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAC,EAAWC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAd,EAAAe,EAAAC,EAAAC,EAAA,OAAAT,EAAAA,EAAAA,KAAAU,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASd,OARKrB,EAAYE,KAAKF,UAAWe,EAAUJ,EAASI,QAC/CC,GAASM,EAAAA,EAAAA,IAAyBP,EAAQC,OAAQL,EAASY,GAAIR,EAAQS,kBAC7Eb,EAASc,aAAcC,EAAAA,EAAAA,IAAcV,EAAOW,OAAS3B,EAAU4B,OAAOC,WACtElB,EAASmB,eAAgBJ,EAAAA,EAAAA,IAA4B,QAAfd,EAACI,EAAOe,eAAO,IAAAnB,EAAAA,EATtC,GAUfD,EAASqB,gBAA8B,QAAfnB,EAAGG,EAAOiB,aAAK,IAAApB,OAAA,EAAZA,EAAcqB,WACnCjB,EAA8C,QAAhCH,GAAGqB,EAAAA,EAAAA,IAAgBnB,EAAOiB,cAAM,IAAAnB,EAAAA,EAAIH,EAASyB,kBAE7DzB,EAAS0B,aAAcC,EAAAA,EAAAA,IAAuBrB,EAAgBN,EAASqB,gBAAiBhC,EAAU4B,OAAOW,eAC5GpB,EAAAE,KAAA,EACKmB,QAAQC,UAAS,wBAAAtB,EAAAuB,OAAA,GAAAhC,EAAA,UAC1B,gBAAAiC,GAAA,OAAArC,EAAAsC,MAAA,KAAAC,UAAA,EAZA,IAYA,CAAAzC,IAAA,YAAAC,MACD,SAAUM,GACA,IAAAsB,EAAQtB,EAASqB,gBAAmBK,EAAgB1B,EAAhB0B,YAC1C,OAAS1B,EAASmC,YACbnC,EAASoC,YACRd,SACyBe,KAAd,OAAXX,QAAW,IAAXA,OAAW,EAAXA,EAAaY,EAAE5C,QAAuBgC,EAAYY,EAAEC,aACxBF,KAAd,OAAXX,QAAW,IAAXA,OAAW,EAAXA,EAAac,EAAE9C,QAAuBgC,EAAYc,EAAED,aAC3BF,KAAd,OAAXX,QAAW,IAAXA,OAAW,EAAXA,EAAae,EAAE/C,QAAuBgC,EAAYe,EAAEF,OACjE,GAAC,CAAA9C,IAAA,SAAAC,MAAA,eAAAgD,GAAA9C,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAA6C,EAAa3C,EAAU4C,GAAK,OAAA/C,EAAAA,EAAAA,KAAAU,MAAA,SAAAsC,GAAA,cAAAA,EAAApC,KAAAoC,EAAAnC,MAAA,UACnBnB,KAAKuD,UAAU9C,GAAW,CAAF6C,EAAAnC,KAAA,eAAAmC,EAAAE,OAAA,iBAGY,OAAzCC,EAAAA,EAAAA,IAAYhD,EAAS0B,YAAakB,GAAOC,EAAAnC,KAAA,EACnCmB,QAAQC,UAAS,wBAAAe,EAAAd,OAAA,GAAAY,EAAA,UAC1B,gBAAAM,EAAAC,GAAA,OAAAR,EAAAT,MAAA,KAAAC,UAAA,EAPA,MAOA9C,CAAA,CA/B0B,E","sources":["../node_modules/@tsparticles/updater-stroke-color/browser/StrokeColorUpdater.js"],"sourcesContent":["import { getHslAnimationFromHsl, getRangeValue, itemFromSingleOrMultiple, rangeColorToHsl, updateColor, } from \"@tsparticles/engine\";\nconst defaultOpacity = 1;\nexport class StrokeColorUpdater {\n    constructor(container) {\n        this.container = container;\n    }\n    async init(particle) {\n        const container = this.container, options = particle.options;\n        const stroke = itemFromSingleOrMultiple(options.stroke, particle.id, options.reduceDuplicates);\n        particle.strokeWidth = getRangeValue(stroke.width) * container.retina.pixelRatio;\n        particle.strokeOpacity = getRangeValue(stroke.opacity ?? defaultOpacity);\n        particle.strokeAnimation = stroke.color?.animation;\n        const strokeHslColor = rangeColorToHsl(stroke.color) ?? particle.getFillColor();\n        if (strokeHslColor) {\n            particle.strokeColor = getHslAnimationFromHsl(strokeHslColor, particle.strokeAnimation, container.retina.reduceFactor);\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        const color = particle.strokeAnimation, { strokeColor } = particle;\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            !!color &&\n            ((strokeColor?.h.value !== undefined && strokeColor.h.enable) ||\n                (strokeColor?.s.value !== undefined && strokeColor.s.enable) ||\n                (strokeColor?.l.value !== undefined && strokeColor.l.enable)));\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateColor(particle.strokeColor, delta);\n        await Promise.resolve();\n    }\n}\n"],"names":["StrokeColorUpdater","container","_classCallCheck","this","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","particle","_stroke$opacity","_stroke$color","_rangeColorToHsl","options","stroke","strokeHslColor","wrap","_context","prev","next","itemFromSingleOrMultiple","id","reduceDuplicates","strokeWidth","getRangeValue","width","retina","pixelRatio","strokeOpacity","opacity","strokeAnimation","color","animation","rangeColorToHsl","getFillColor","strokeColor","getHslAnimationFromHsl","reduceFactor","Promise","resolve","stop","_x","apply","arguments","destroyed","spawning","undefined","h","enable","s","l","_update","_callee2","delta","_context2","isEnabled","abrupt","updateColor","_x2","_x3"],"sourceRoot":""}