{"version":3,"file":"static/js/865.785bae4c.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShape.js","../node_modules/@tsparticles/plugin-emitters-shape-square/browser/EmittersSquareShapeGenerator.js","../node_modules/@tsparticles/plugin-emitters/browser/EmitterShapeBase.js"],"sourcesContent":["import { EmitterShapeBase } from \"@tsparticles/plugin-emitters\";\nimport { getRandom, halfRandom } from \"@tsparticles/engine\";\nconst half = 0.5, sides = 4, double = 2;\nfunction randomSquareCoordinate(position, offset) {\n    return position + offset * (getRandom() - halfRandom);\n}\nexport class EmittersSquareShape extends EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        super(position, size, fill, options);\n    }\n    async init() {\n    }\n    async randomPosition() {\n        return await new Promise((success) => {\n            const fill = this.fill, position = this.position, size = this.size;\n            if (fill) {\n                return success({\n                    position: {\n                        x: randomSquareCoordinate(position.x, size.width),\n                        y: randomSquareCoordinate(position.y, size.height),\n                    },\n                });\n            }\n            else {\n                const halfW = size.width * half, halfH = size.height * half, side = Math.floor(getRandom() * sides), v = (getRandom() - halfRandom) * double;\n                switch (side) {\n                    case 0:\n                        return success({\n                            position: {\n                                x: position.x + v * halfW,\n                                y: position.y - halfH,\n                            },\n                        });\n                    case 1:\n                        return success({\n                            position: {\n                                x: position.x - halfW,\n                                y: position.y + v * halfH,\n                            },\n                        });\n                    case 2:\n                        return success({\n                            position: {\n                                x: position.x + v * halfW,\n                                y: position.y + halfH,\n                            },\n                        });\n                    case 3:\n                    default:\n                        return success({\n                            position: {\n                                x: position.x + halfW,\n                                y: position.y + v * halfH,\n                            },\n                        });\n                }\n            }\n        });\n    }\n}\n","import { EmittersSquareShape } from \"./EmittersSquareShape.js\";\nexport class EmittersSquareShapeGenerator {\n    generate(position, size, fill, options) {\n        return new EmittersSquareShape(position, size, fill, options);\n    }\n}\n","export class EmitterShapeBase {\n    constructor(position, size, fill, options) {\n        this.position = position;\n        this.size = size;\n        this.fill = fill;\n        this.options = options;\n    }\n    resize(position, size) {\n        this.position = position;\n        this.size = size;\n    }\n}\n"],"names":["randomSquareCoordinate","position","offset","getRandom","halfRandom","EmittersSquareShape","_EmitterShapeBase","_inherits","_super","_createSuper","size","fill","options","_classCallCheck","call","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","apply","arguments","_randomPosition","_callee2","_this","_context2","Promise","success","x","width","y","height","halfW","halfH","side","Math","floor","v","abrupt","sent","EmitterShapeBase","EmittersSquareShapeGenerator","this"],"sourceRoot":""}