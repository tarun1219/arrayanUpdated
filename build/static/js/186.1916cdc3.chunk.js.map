{"version":3,"file":"static/js/186.1916cdc3.chunk.js","mappings":"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","sources":["../node_modules/@tsparticles/interaction-particles-collisions/browser/ResolveCollision.js","../node_modules/@tsparticles/interaction-particles-collisions/browser/Collider.js"],"sourcesContent":["export async function resolveCollision(p1, p2, delta, pixelRatio) {\n    switch (p1.options.collisions.mode) {\n        case \"absorb\": {\n            const { absorb } = await import(\"./Absorb.js\");\n            absorb(p1, p2, delta, pixelRatio);\n            break;\n        }\n        case \"bounce\": {\n            const { bounce } = await import(\"./Bounce.js\");\n            bounce(p1, p2);\n            break;\n        }\n        case \"destroy\": {\n            const { destroy } = await import(\"./Destroy.js\");\n            destroy(p1, p2);\n            break;\n        }\n    }\n}\n","import { ParticlesInteractorBase, getDistance } from \"@tsparticles/engine\";\nimport { resolveCollision } from \"./ResolveCollision.js\";\nconst double = 2;\nexport class Collider extends ParticlesInteractorBase {\n    constructor(container) {\n        super(container);\n    }\n    clear() {\n    }\n    init() {\n    }\n    async interact(p1, delta) {\n        if (p1.destroyed || p1.spawning) {\n            return;\n        }\n        const container = this.container, pos1 = p1.getPosition(), radius1 = p1.getRadius(), query = container.particles.quadTree.queryCircle(pos1, radius1 * double);\n        for (const p2 of query) {\n            if (p1 === p2 ||\n                !p2.options.collisions.enable ||\n                p1.options.collisions.mode !== p2.options.collisions.mode ||\n                p2.destroyed ||\n                p2.spawning) {\n                continue;\n            }\n            const pos2 = p2.getPosition(), radius2 = p2.getRadius();\n            if (Math.abs(Math.round(pos1.z) - Math.round(pos2.z)) > radius1 + radius2) {\n                continue;\n            }\n            const dist = getDistance(pos1, pos2), distP = radius1 + radius2;\n            if (dist > distP) {\n                continue;\n            }\n            await resolveCollision(p1, p2, delta, container.retina.pixelRatio);\n        }\n    }\n    isEnabled(particle) {\n        return particle.options.collisions.enable;\n    }\n    reset() {\n    }\n}\n"],"names":["resolveCollision","_x","_x2","_x3","_x4","_resolveCollision","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","p1","p2","delta","pixelRatio","_yield$import","_yield$import2","_yield$import3","wrap","_context","prev","next","t0","options","collisions","mode","sent","absorb","abrupt","bounce","destroy","stop","Collider","_ParticlesInteractorB","_inherits","_super","_createSuper","container","_classCallCheck","call","_createClass","key","value","_interact","pos1","radius1","query","_iterator","_step","pos2","radius2","destroyed","spawning","this","getPosition","getRadius","particles","quadTree","queryCircle","_createForOfIteratorHelper","s","n","done","enable","Math","abs","round","z","getDistance","retina","e","f","finish","particle","ParticlesInteractorBase"],"sourceRoot":""}