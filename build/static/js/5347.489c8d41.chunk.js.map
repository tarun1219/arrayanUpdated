{"version":3,"file":"static/js/5347.489c8d41.chunk.js","mappings":"oNACMA,EAAY,EAAGC,EAAW,EAAGC,EAAY,EAC/C,SAASC,EAAeC,EAAWC,EAAUC,EAAeC,EAAMC,GAC9D,IAAMC,EAAiBL,EAAUM,cAAcC,cAAcC,MAAMC,QACnE,GAAKJ,EAAL,CAGA,IAC4BK,EADtBC,EAAQX,EAAUY,UAAUC,SAASF,MAAMR,EAAMC,GAASU,GAAAC,EAAAA,EAAAA,GACzCJ,GAAK,IAA5B,IAAAG,EAAAE,MAAAN,EAAAI,EAAAG,KAAAC,MAA8B,KAAnBC,EAAQT,EAAAU,MACfC,GAA6BC,EAAAA,EAAAA,IAAaH,EAASlB,SAAUA,GAArDsB,EAAEF,EAAFE,GAAIC,EAAEH,EAAFG,GAAIC,EAAQJ,EAARI,SAAwDC,EAAWrB,EAAesB,MAAQtB,EAAeuB,OAAQC,GAAgBC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,IAAU1B,EAAe2B,OAAzBD,CAAiClC,EAAW4B,EAAWvB,GAAiBwB,EAAU9B,EAAWS,EAAe4B,UAAWC,EAAUC,EAAAA,GAAOC,OAAQX,EAAuBF,EAAKE,EAAYI,EAA7BH,EAA6CD,EAAuBD,EAAKC,EAAYI,EAA7BH,GAC1WP,EAASlB,SAASoC,QAAQH,EAC9B,CAAC,OAAAI,GAAAxB,EAAAyB,EAAAD,EAAA,SAAAxB,EAAA0B,GAAA,CALD,CAMJ,CACO,SAASC,EAAazC,EAAW0C,GAC/B1C,EAAUS,UACXT,EAAUS,QAAU,CAAEG,UAAW,KAErC,IAAQH,EAAYT,EAAZS,QAUR,GATKA,EAAQkC,SACJlC,EAAQmC,QACTnC,EAAQmC,MAAQ,GAEpBnC,EAAQmC,QACJnC,EAAQmC,QAAU5C,EAAUY,UAAUgC,QACtCnC,EAAQkC,QAAS,IAGrBlC,EAAQoC,SAAU,CAClB,IAAMC,EAAW9C,EAAUO,cAAcwC,MAAMC,cAAe9C,EAAgBF,EAAUiD,OAAOC,oBAC/F,IAAKhD,GAAiBA,EAAgBJ,IAAcgD,EAChD,OAEJ/C,EAAeC,EAAW8C,EAAU5C,EAAe,IAAIiD,EAAAA,GAAOL,EAASM,EAAGN,EAASO,EAAGnD,IAAgB,SAACoD,GAAC,OAAKZ,EAAUY,EAAE,GAC7H,MAC8B,IAArB7C,EAAQoC,WACbpC,EAAQG,UAAY,GAE5B,CACO,SAAS2C,EAAavD,EAAW0C,GACpC,IAAMI,EAAW9C,EAAUO,cAAcwC,MAAM9C,SAAUC,EAAgBF,EAAUiD,OAAOC,qBACrFhD,GAAiBA,EAAgBJ,IAAcgD,GAGpD/C,EAAeC,EAAW8C,EAAU5C,EAAe,IAAIiD,EAAAA,GAAOL,EAASM,EAAGN,EAASO,EAAGnD,IAAgB,SAACoD,GAAC,OAAKZ,EAAUY,EAAE,GAC7H,C","sources":["../node_modules/@tsparticles/interaction-external-attract/browser/Utils.js"],"sourcesContent":["import { Circle, Vector, clamp, getDistances, getEasing, } from \"@tsparticles/engine\";\nconst minFactor = 1, identity = 1, minRadius = 0;\nfunction processAttract(container, position, attractRadius, area, queryCb) {\n    const attractOptions = container.actualOptions.interactivity.modes.attract;\n    if (!attractOptions) {\n        return;\n    }\n    const query = container.particles.quadTree.query(area, queryCb);\n    for (const particle of query) {\n        const { dx, dy, distance } = getDistances(particle.position, position), velocity = attractOptions.speed * attractOptions.factor, attractFactor = clamp(getEasing(attractOptions.easing)(identity - distance / attractRadius) * velocity, minFactor, attractOptions.maxSpeed), normVec = Vector.create(!distance ? velocity : (dx / distance) * attractFactor, !distance ? velocity : (dy / distance) * attractFactor);\n        particle.position.subFrom(normVec);\n    }\n}\nexport function clickAttract(container, enabledCb) {\n    if (!container.attract) {\n        container.attract = { particles: [] };\n    }\n    const { attract } = container;\n    if (!attract.finish) {\n        if (!attract.count) {\n            attract.count = 0;\n        }\n        attract.count++;\n        if (attract.count === container.particles.count) {\n            attract.finish = true;\n        }\n    }\n    if (attract.clicking) {\n        const mousePos = container.interactivity.mouse.clickPosition, attractRadius = container.retina.attractModeDistance;\n        if (!attractRadius || attractRadius < minRadius || !mousePos) {\n            return;\n        }\n        processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n    }\n    else if (attract.clicking === false) {\n        attract.particles = [];\n    }\n}\nexport function hoverAttract(container, enabledCb) {\n    const mousePos = container.interactivity.mouse.position, attractRadius = container.retina.attractModeDistance;\n    if (!attractRadius || attractRadius < minRadius || !mousePos) {\n        return;\n    }\n    processAttract(container, mousePos, attractRadius, new Circle(mousePos.x, mousePos.y, attractRadius), (p) => enabledCb(p));\n}\n"],"names":["minFactor","identity","minRadius","processAttract","container","position","attractRadius","area","queryCb","attractOptions","actualOptions","interactivity","modes","attract","_step","query","particles","quadTree","_iterator","_createForOfIteratorHelper","s","n","done","particle","value","_getDistances","getDistances","dx","dy","distance","velocity","speed","factor","attractFactor","clamp","getEasing","easing","maxSpeed","normVec","Vector","create","subFrom","err","e","f","clickAttract","enabledCb","finish","count","clicking","mousePos","mouse","clickPosition","retina","attractModeDistance","Circle","x","y","p","hoverAttract"],"sourceRoot":""}