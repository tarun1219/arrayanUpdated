{"version":3,"file":"static/js/9469.8ad006e2.chunk.js","mappings":"+MAEaA,EAAW,oBAAAA,KAAAC,EAAAA,EAAAA,GAAA,KAAAD,EAAA,CA8BnB,OA9BmBE,EAAAA,EAAAA,GAAAF,EAAA,EAAAG,IAAA,OAAAC,MAAA,eAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACpB,SAAAC,EAAWC,GAAQ,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAP,EAAAA,EAAAA,KAAAQ,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OASd,OARKP,EAAYD,EAASC,UAAWC,EAAcF,EAASS,QAAQC,MAAMP,EAAgBD,EAAYS,WACrFC,SACdZ,EAASU,KAAKG,UAC0B,QAAnCT,EAACJ,EAASc,OAAOC,0BAAkB,IAAAX,EAAAA,EAAIH,EAAUa,OAAOC,oBAAsBC,EAAAA,GAC3Ef,EAAUa,OAAOG,aACpBd,EAAce,OACflB,EAASU,KAAKG,WAAYM,EAAAA,EAAAA,QAEjCb,EAAAE,KAAA,EACKY,QAAQC,UAAS,wBAAAf,EAAAgB,OAAA,GAAAvB,EAAA,KAC1B,gBAAAwB,GAAA,OAAA5B,EAAA6B,MAAA,KAAAC,UAAA,EAZmB,IAYnB,CAAAhC,IAAA,YAAAC,MACD,SAAUM,GAAU,IAAA0B,EAAAC,EAAAC,EAAAC,EAChB,OAAS7B,EAAS8B,YACb9B,EAAS+B,UACV/B,EAASU,KAAKE,UACU,QAAvBc,EAAC1B,EAASU,KAAKsB,gBAAQ,IAAAN,EAAAA,EAlBnB,QAmBuB,QAAvBC,EAAC3B,EAASU,KAAKsB,gBAAQ,IAAAL,EAAAA,EAnBvB,OAoBuB,QAApBC,EAAC5B,EAASU,KAAKuB,aAAK,IAAAL,EAAAA,EApBvB,IAoB8D,QAA3BC,EAAK7B,EAASU,KAAKsB,gBAAQ,IAAAH,EAAAA,EApB9D,GAqBb,GAAC,CAAApC,IAAA,QAAAC,MACD,SAAMM,GACFA,EAASU,KAAKuB,MAvBL,CAwBb,GAAC,CAAAxC,IAAA,SAAAC,MAAA,eAAAwC,GAAAtC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MACD,SAAAqC,EAAanC,EAAUoC,GAAK,OAAAvC,EAAAA,EAAAA,KAAAQ,MAAA,SAAAgC,GAAA,cAAAA,EAAA9B,KAAA8B,EAAA7B,MAAA,UACnB8B,KAAKC,UAAUvC,GAAW,CAAFqC,EAAA7B,KAAA,eAAA6B,EAAAG,OAAA,iBAGkE,OAA/FC,EAAAA,EAAAA,IAAgBzC,EAAUA,EAASU,MAAM,EAAMV,EAASS,QAAQC,KAAKC,UAAU+B,QAASN,GAAOC,EAAA7B,KAAA,EACzFY,QAAQC,UAAS,wBAAAgB,EAAAf,OAAA,GAAAa,EAAA,UAC1B,gBAAAQ,EAAAC,GAAA,OAAAV,EAAAV,MAAA,KAAAC,UAAA,EAPA,MAOAnC,CAAA,CA9BmB,E","sources":["../node_modules/@tsparticles/updater-size/browser/SizeUpdater.js"],"sourcesContent":["import { getRandom, percentDenominator, updateAnimation, } from \"@tsparticles/engine\";\nconst minLoops = 0;\nexport class SizeUpdater {\n    async init(particle) {\n        const container = particle.container, sizeOptions = particle.options.size, sizeAnimation = sizeOptions.animation;\n        if (sizeAnimation.enable) {\n            particle.size.velocity =\n                ((particle.retina.sizeAnimationSpeed ?? container.retina.sizeAnimationSpeed) / percentDenominator) *\n                    container.retina.reduceFactor;\n            if (!sizeAnimation.sync) {\n                particle.size.velocity *= getRandom();\n            }\n        }\n        await Promise.resolve();\n    }\n    isEnabled(particle) {\n        return (!particle.destroyed &&\n            !particle.spawning &&\n            particle.size.enable &&\n            ((particle.size.maxLoops ?? minLoops) <= minLoops ||\n                ((particle.size.maxLoops ?? minLoops) > minLoops &&\n                    (particle.size.loops ?? minLoops) < (particle.size.maxLoops ?? minLoops))));\n    }\n    reset(particle) {\n        particle.size.loops = minLoops;\n    }\n    async update(particle, delta) {\n        if (!this.isEnabled(particle)) {\n            return;\n        }\n        updateAnimation(particle, particle.size, true, particle.options.size.animation.destroy, delta);\n        await Promise.resolve();\n    }\n}\n"],"names":["SizeUpdater","_classCallCheck","_createClass","key","value","_init","_asyncToGenerator","_regeneratorRuntime","mark","_callee","particle","container","sizeOptions","sizeAnimation","_particle$retina$size","wrap","_context","prev","next","options","size","animation","enable","velocity","retina","sizeAnimationSpeed","percentDenominator","reduceFactor","sync","getRandom","Promise","resolve","stop","_x","apply","arguments","_particle$size$maxLoo","_particle$size$maxLoo2","_particle$size$loops","_particle$size$maxLoo3","destroyed","spawning","maxLoops","loops","_update","_callee2","delta","_context2","this","isEnabled","abrupt","updateAnimation","destroy","_x2","_x3"],"sourceRoot":""}