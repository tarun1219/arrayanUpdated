{"version":3,"file":"static/js/3710.c578a577.chunk.js","mappings":"sKACMA,EAAS,EAAGC,GAAiB,EAAGC,EAAS,EAAGC,EAAgB,EAC3D,SAASC,EAAWC,EAAUC,EAAOC,GACxC,GAAKF,EAASG,KAAd,CAGA,IAAMA,EAAOH,EAASG,KAClBC,GAAc,EAClB,GAAIJ,EAASK,SAAU,CAEnB,GADAF,EAAKG,WAAaL,EAAMM,QACpBJ,EAAKG,WAAaN,EAASG,KAAKK,OAOhC,OANAJ,GAAc,EACdJ,EAASK,UAAW,EACpBF,EAAKG,UAAYX,EACjBQ,EAAKM,KAAOd,CAKpB,CACA,GAAIQ,EAAKO,WAAad,IAGlBI,EAASK,WAGTD,EACAD,EAAKM,KAAOd,EAGZQ,EAAKM,MAAQR,EAAMM,QAEnBJ,EAAKM,KAAON,EAAKO,WAOrB,GAJAP,EAAKM,KAAOd,EACRK,EAASG,KAAKQ,MAAQd,GACtBG,EAASG,KAAKQ,QAEdX,EAASG,KAAKQ,QAAUd,EAA5B,CAIA,IAAMe,GAAaC,EAAAA,EAAAA,IAAcf,EAAeI,EAAWY,OAAQC,GAAcF,EAAAA,EAAAA,IAAcf,EAAeI,EAAWY,OACzHd,EAASgB,SAASC,GAAIC,EAAAA,EAAAA,IAAcN,GACpCZ,EAASgB,SAASG,GAAID,EAAAA,EAAAA,IAAcH,GACpCf,EAASK,UAAW,EACpBF,EAAKG,UAAYX,EACjBQ,EAAKM,KAAOd,EACZK,EAASoB,QACT,IAAMC,EAAcrB,EAASsB,QAAQnB,KACjCkB,IACAlB,EAAKK,OAAQe,EAAAA,EAAAA,IAAcF,EAAYb,MAAMD,OAASiB,EAAAA,GACtDrB,EAAKO,UAAWa,EAAAA,EAAAA,IAAcF,EAAYX,SAASH,OAASiB,EAAAA,GAXhE,MAFIxB,EAASyB,SAnCb,CAkDJ,C","sources":["../node_modules/@tsparticles/updater-life/browser/Utils.js"],"sourcesContent":["import { getRangeValue, millisecondsToSeconds, randomInRange, setRangeValue, } from \"@tsparticles/engine\";\nconst noTime = 0, infiniteValue = -1, noLife = 0, minCanvasSize = 0;\nexport function updateLife(particle, delta, canvasSize) {\n    if (!particle.life) {\n        return;\n    }\n    const life = particle.life;\n    let justSpawned = false;\n    if (particle.spawning) {\n        life.delayTime += delta.value;\n        if (life.delayTime >= particle.life.delay) {\n            justSpawned = true;\n            particle.spawning = false;\n            life.delayTime = noTime;\n            life.time = noTime;\n        }\n        else {\n            return;\n        }\n    }\n    if (life.duration === infiniteValue) {\n        return;\n    }\n    if (particle.spawning) {\n        return;\n    }\n    if (justSpawned) {\n        life.time = noTime;\n    }\n    else {\n        life.time += delta.value;\n    }\n    if (life.time < life.duration) {\n        return;\n    }\n    life.time = noTime;\n    if (particle.life.count > noLife) {\n        particle.life.count--;\n    }\n    if (particle.life.count === noLife) {\n        particle.destroy();\n        return;\n    }\n    const widthRange = setRangeValue(minCanvasSize, canvasSize.width), heightRange = setRangeValue(minCanvasSize, canvasSize.width);\n    particle.position.x = randomInRange(widthRange);\n    particle.position.y = randomInRange(heightRange);\n    particle.spawning = true;\n    life.delayTime = noTime;\n    life.time = noTime;\n    particle.reset();\n    const lifeOptions = particle.options.life;\n    if (lifeOptions) {\n        life.delay = getRangeValue(lifeOptions.delay.value) * millisecondsToSeconds;\n        life.duration = getRangeValue(lifeOptions.duration.value) * millisecondsToSeconds;\n    }\n}\n"],"names":["noTime","infiniteValue","noLife","minCanvasSize","updateLife","particle","delta","canvasSize","life","justSpawned","spawning","delayTime","value","delay","time","duration","count","widthRange","setRangeValue","width","heightRange","position","x","randomInRange","y","reset","lifeOptions","options","getRangeValue","millisecondsToSeconds","destroy"],"sourceRoot":""}